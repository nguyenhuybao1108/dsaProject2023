///*
// * GameForm.java
// *
// * Created on March 15, 2010, 2:48 AM
// */
//package chessgame;
//
///**
// * A window to contain a GamePanel and menu items
// * @author  Paul
// */
//
//import chess.GamePanel;
//
//public class GameWindow extends javax.swing.JFrame{
//
//    GamePanel gameScreen;
//
//    /**
//     * Creates new GameWindow
//     */
//    public GameWindow() {
//        initComponents();
//        init();
//    }
//
//    /**
//     * Initializes the game in the form
//     */
//    private void init()
//    {
//        gameScreen = new GamePanel(jPanel1.getWidth(), jPanel1.getHeight());
//        jPanel1.add(gameScreen);
//    }
//
//    /** This method is called from within the constructor to
//     * initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is
//     * always regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jPanel1 = new javax.swing.JPanel();
//        jMenuBar_Main = new javax.swing.JMenuBar();
//        jMenu_Game = new javax.swing.JMenu();
//        jMenuItem_New1P = new javax.swing.JMenuItem();
//        jMenuItem_New2P = new javax.swing.JMenuItem();
//        jMenuItem_Undo = new javax.swing.JMenuItem();
//        jMenuItem_Close = new javax.swing.JMenuItem();
//        jMenu_File = new javax.swing.JMenu();
//        jMenuItem_Save = new javax.swing.JMenuItem();
//        jMenuItem_Load = new javax.swing.JMenuItem();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//        setTitle("ChessGame by Paul Saikko");
//        setLocationByPlatform(true);
//
//        jPanel1.setMaximumSize(new java.awt.Dimension(10000, 10000));
//        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
//        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
//            public void componentResized(java.awt.event.ComponentEvent evt) {
//                jPanel1_componentResized(evt);
//            }
//        });
//
//        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
//        jPanel1.setLayout(jPanel1Layout);
//        jPanel1Layout.setHorizontalGroup(
//            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 800, Short.MAX_VALUE)
//        );
//        jPanel1Layout.setVerticalGroup(
//            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 800, Short.MAX_VALUE)
//        );
//
//        jMenu_Game.setText("Game");
//
//        jMenuItem_New1P.setText("New 1-Player");
//        jMenuItem_New1P.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_New1PActionPerformed(evt);
//            }
//        });
//        jMenu_Game.add(jMenuItem_New1P);
//
//        jMenuItem_New2P.setText("New 2-Player");
//        jMenuItem_New2P.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_New2PActionPerformed(evt);
//            }
//        });
//        jMenu_Game.add(jMenuItem_New2P);
//
//        jMenuItem_Undo.setText("Undo");
//        jMenuItem_Undo.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_UndoActionPerformed(evt);
//            }
//        });
//        jMenu_Game.add(jMenuItem_Undo);
//
//        jMenuItem_Close.setText("Close");
//        jMenuItem_Close.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_CloseActionPerformed(evt);
//            }
//        });
//        jMenu_Game.add(jMenuItem_Close);
//
//        jMenuBar_Main.add(jMenu_Game);
//
//        jMenu_File.setText("File");
//
//        jMenuItem_Save.setText("Save");
//        jMenuItem_Save.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_SaveActionPerformed(evt);
//            }
//        });
//        jMenu_File.add(jMenuItem_Save);
//
//        jMenuItem_Load.setText("Load");
//        jMenuItem_Load.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jMenuItem_LoadActionPerformed(evt);
//            }
//        });
//        jMenu_File.add(jMenuItem_Load);
//
//        jMenuBar_Main.add(jMenu_File);
//
//        setJMenuBar(jMenuBar_Main);
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
//                .addContainerGap())
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//
//private void jMenuItem_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CloseActionPerformed
//    this.dispose();
//}//GEN-LAST:event_jMenuItem_CloseActionPerformed
//
//private void jMenuItem_New2PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_New2PActionPerformed
//    gameScreen.newGame();
//}//GEN-LAST:event_jMenuItem_New2PActionPerformed
//
//private void jMenuItem_LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_LoadActionPerformed
//    gameScreen.loadBoard();
//}//GEN-LAST:event_jMenuItem_LoadActionPerformed
//
//private void jMenuItem_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SaveActionPerformed
//    gameScreen.saveBoard();
//}//GEN-LAST:event_jMenuItem_SaveActionPerformed
//
//private void jMenuItem_UndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_UndoActionPerformed
//    gameScreen.undo();
//}//GEN-LAST:event_jMenuItem_UndoActionPerformed
//
//private void jMenuItem_New1PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_New1PActionPerformed
//    gameScreen.newAiGame();
//}//GEN-LAST:event_jMenuItem_New1PActionPerformed
//
//private void jPanel1_componentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1_componentResized
//    // allow the game board to be resized
//    if (jPanel1 != null && gameScreen != null) {
//        int smallerDimension = jPanel1.getHeight();
//        if (jPanel1.getWidth() < smallerDimension)
//            smallerDimension = jPanel1.getWidth();
//        // make sure the board stays square and completely visible
//        gameScreen.setSize(smallerDimension, smallerDimension);
//    }
//}//GEN-LAST:event_jPanel1_componentResized
//
//    /**
//    * @param args the command line arguments
//    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameWindow().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JMenuBar jMenuBar_Main;
//    private javax.swing.JMenuItem jMenuItem_Close;
//    private javax.swing.JMenuItem jMenuItem_Load;
//    private javax.swing.JMenuItem jMenuItem_New1P;
//    private javax.swing.JMenuItem jMenuItem_New2P;
//    private javax.swing.JMenuItem jMenuItem_Save;
//    private javax.swing.JMenuItem jMenuItem_Undo;
//    private javax.swing.JMenu jMenu_File;
//    private javax.swing.JMenu jMenu_Game;
//    private javax.swing.JPanel jPanel1;
//    // End of variables declaration//GEN-END:variables
//
//}

package chessgame;

import chess.GamePanel;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class GameWindow extends JPanel {

    GamePanel gameScreen;

    public GameWindow(GamePanel gp) {
        initComponents();
        init(gp);
    }

    private void init(GamePanel gp) {
//        gameScreen = new GamePanel(getWidth(), getHeight());
//        add(gameScreen);
        gp = gameScreen;
        gameScreen = new GamePanel(getWidth(),getHeight());
        add(gameScreen);
    }

    private void initComponents() {
        setLayout(new BorderLayout());

        // Create a placeholder panel for the game screen, as it'll be added later
        JPanel jPanel1 = new JPanel();
        jPanel1.setMaximumSize(new Dimension(10000, 10000));
        jPanel1.setMinimumSize(new Dimension(0, 0));
        jPanel1.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent evt) {
                jPanel1_componentResized(evt);
            }
        });
        add(jPanel1, BorderLayout.CENTER);

        // Create a menu bar for actions
//        JMenuBar jMenuBar_Main = new JMenuBar();
//        JMenu jMenu_Game = new JMenu("Game");
//        JMenuItem jMenuItem_New1P = new JMenuItem("New 1-Player");
//        jMenuItem_New1P.addActionListener(e -> gameScreen.newAiGame());
//        jMenu_Game.add(jMenuItem_New1P);
//        JMenuItem jMenuItem_New2P = new JMenuItem("New 2-Player");
//        jMenuItem_New2P.addActionListener(e -> gameScreen.newGame());
//        jMenu_Game.add(jMenuItem_New2P);
//        JMenuItem jMenuItem_Undo = new JMenuItem("Undo");
//        jMenuItem_Undo.addActionListener(e -> gameScreen.undo());
//        jMenu_Game.add(jMenuItem_Undo);
//        JMenuItem jMenuItem_Close = new JMenuItem("Close");
//   //     jMenuItem_Close.addActionListener(e -> dispose()); // Dispose of the containing JFrame
//        jMenu_Game.add(jMenuItem_Close);
//        jMenuBar_Main.add(jMenu_Game);
//
//        JMenu jMenu_File = new JMenu("File");
//        JMenuItem jMenuItem_Save = new JMenuItem("Save");
//        jMenuItem_Save.addActionListener(e -> gameScreen.saveBoard());
//        jMenu_File.add(jMenuItem_Save);
//        JMenuItem jMenuItem_Load = new JMenuItem("Load");
//        jMenuItem_Load.addActionListener(e -> gameScreen.loadBoard());
//        jMenu_File.add(jMenuItem_Load);
//        jMenuBar_Main.add(jMenu_File);
//
//        jMenuItem_Close = new JMenuItem("Close");
//        jMenuItem_Close.addActionListener(e -> {
//            JFrame frame = (JFrame) SwingUtilities.windowForComponent(this);
//            if (frame != null) {
//                frame.dispose();
//            }
//        });
//        jMenu_Game.add(jMenuItem_Close);
//        jMenuBar_Main.add(jMenu_Game);
//
//        JFrame frame = (JFrame) SwingUtilities.windowForComponent(this);
//        if (frame != null) {
//            frame.setJMenuBar(jMenuBar_Main);
//        }
    }

    private void jPanel1_componentResized(ComponentEvent evt) {
        if (gameScreen != null) {
            int smallerDimension = jPanel1.getHeight();
            if (jPanel1.getWidth() < smallerDimension) {
                smallerDimension = jPanel1.getWidth();
            }
            gameScreen.setSize(smallerDimension, smallerDimension);
        }
    }

//    public static void main(String args[]) {
//        SwingUtilities.invokeLater(() -> {
//            JFrame frame = new JFrame("ChessGame by Paul Saikko");
//            frame.setContentPane(new GameWindow());
//            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//            frame.pack();
//            frame.setLocationByPlatform(true);
//            frame.setVisible(true);
//        });
//    }

    public void Setup(){
        JFrame frame = new JFrame("ChessGame");
        frame.setSize(1000,800);
        frame.setContentPane(new GameWindow(gameScreen));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }

//    public void setMode(){
//    }

    private javax.swing.JMenuBar jMenuBar_Main;
    private javax.swing.JMenuItem jMenuItem_Close;
    private javax.swing.JMenuItem jMenuItem_Load;
    private javax.swing.JMenuItem jMenuItem_New1P;
    private javax.swing.JMenuItem jMenuItem_New2P;
    private javax.swing.JMenuItem jMenuItem_Save;
    private javax.swing.JMenuItem jMenuItem_Undo;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_Game;
    private javax.swing.JPanel jPanel1;
}
